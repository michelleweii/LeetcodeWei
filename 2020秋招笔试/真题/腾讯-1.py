# 给定一个数组序列，从该数组里面取n个数，使其和为m，返回所有满足条件的子数组。
# 从长度为n的数组里选出m个数使和为固定值sum

#思路：
# 从0-1背包问题角度理解，每个只能用一次，选取若干个数和为m ，每个数的状态为选或者不选。
# 如果这个题光输出有几种方案一个dp就解决了
# dp[i][j]表示前i个数累加和为j的方案数
# dp[i][j] = sum(dp[i-1][j],dp[i-1][j-第i个数的值]
# 如果第i个数如果大于了j，那么sum求和就只有前面一项
# But这个题难在输出具体方案，也就是说你要清楚每一步做了什么选择，
# 所以你还要有一个record二维数组记录record[i][j]表示前i个数组合成j的选择为0：表示不选第i个
# 为1：表示选
# 为2：表示选或者不选都是解空间的一个存在形式。
# 根据组合数学加法法则需要分支累加（就难在这）
# 这个时候需要用dfs来从record的右下角开始往前推
# 另外这个题可以用dfs做，和输出1-n的全排列异曲同工，dfs下到每一层都携带着已经有的和的信息，满足了
# 就把一组答案记录一下，最后输出一个二维数组，注意去重